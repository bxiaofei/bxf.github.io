{"remainingRequest":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/src/container/keywords-advantage/keywords-advantage.vue?vue&type=template&id=0d54ef18&scoped=true&","dependencies":[{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/src/container/keywords-advantage/keywords-advantage.vue","mtime":1633935804817},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}