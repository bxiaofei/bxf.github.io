{"remainingRequest":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/src/container/keyWordsAdvantage/KeyWordsAdvantage.vue?vue&type=template&id=170b9cbc&scoped=true&","dependencies":[{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/src/container/keyWordsAdvantage/KeyWordsAdvantage.vue","mtime":1632721075539},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}