{"remainingRequest":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/src/container/keyWordsAdvantage/EditorInput.vue?vue&type=style&index=0&id=1d922398&lang=less&scoped=true&","dependencies":[{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/src/container/keyWordsAdvantage/EditorInput.vue","mtime":1632721449944},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaofei.bao/Desktop/vue/keywords-advantage-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29sLTUgewogIHBhZGRpbmctcmlnaHQ6IDQwcHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci50ZXh0YXJlYSB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA1MHZoOwp9Ci5idG0tYm94IHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQouY291bnRUeHQgewogIGZvbnQtc2l6ZTogMTJweDsKfQo="},{"version":3,"sources":["EditorInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditorInput.vue","sourceRoot":"src/container/keyWordsAdvantage","sourcesContent":["<template>\n  <div class=\"col-5\">\n    <strong>{{title}}</strong>\n    <textarea\n      class=\"form-control textarea\"\n      style=\"margin-bottom: 10px\"\n      :value=\"value\"\n      @input=\"handleInput\"\n    />\n    <div class=\"btm-box\">\n      <p class=\"countTxt\">{{countTxt}}</p>\n      <el-button class=\"add-item-btn\" type=\"primary\" size=\"mini\" icon=\"el-icon-copy-document\">复制</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: \"\"\n    },\n    title: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data: function() {\n    return {\n      inputTxt: \"\",\n      countTxt: \"0 个字符, 0 个单词\"\n    };\n  },\n  watch: {\n    value(val) {\n      this._updateUI(val);\n    }\n  },\n  methods: {\n    handleInput(vl) {\n      const value = vl.target.value.trim();\n      this._updateUI(value);\n      this.$emit(\"input\", value);\n    },\n    _updateUI(value) {\n      const newValue = value.replace(/\\n/g, \" \");\n      console.log(newValue);\n      let words = newValue ? newValue.split(\" \").length : 0;\n      this.countTxt = `${newValue.length} 个字符，${words} 个单词`;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.col-5 {\n  padding-right: 40px;\n  position: relative;\n}\n.textarea {\n  width: 100%;\n  height: 50vh;\n}\n.btm-box {\n  display: flex;\n  justify-content: space-between;\n}\n.countTxt {\n  font-size: 12px;\n}\n</style>"]}]}